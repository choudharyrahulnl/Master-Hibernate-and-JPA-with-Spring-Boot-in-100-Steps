##################
# SPRING BOOT
##################

# IF WE ARE NOT USING ANY PROFILE THAN DEFAULT PROFILE WILL BE USED
# IF SOME PROFILE IS ACTIVATED THEN PROPERTIES FORM THAT PROFILE AND DEFAULT WILL BE MERGED TOGETHER
# PROFILE ENV PROPERTY IS spring.profiles.active

spring.application.name=SpringRest-DEFAULT

# LOGGING LEVELS : off < error < warning < info < debug < trace.
# TRACE WILL PRINT : error, warning, info, debug.
# DEBUG WILL PRINT: error, warning, info.
# INFO WILL PRINT: error, warning.
# WARNING WILL PRINT: error.
# ERROR WILL PRINT: error.

# IF WE HAVE TOO MANY APPLICATION PROPERTIES THAN WE CAN CREATE A CLASS
#currency-service.url=http://localhost:8081/currency
#currency-service.username=username
#currency-service.key=key

# EMBEDDED TOMCAT

# ACTUATOR:
# GIVES COMPLETE LIST OF BEANS USED IN APP
# HEALTH: APP HEALTH
# METRICS: APP METRICS
# MAPPING: DETAIL AROUND REQUEST MAPPING
# URL: http://localhost:8080/actuator

#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=health,info,env,beans,metrics

##################
# JDBC TO JPA
##################

# USING SPRING JDBC, H2, JPA

# H2 DATASOURCE: URL /h2-console
spring.datasource.url=jdbc:h2:mem:testdb;NON_KEYWORDS=USER
spring.h2.console.enabled=true
spring.data.jpa.repositories.bootstrap-mode=default
spring.jpa.defer-datasource-initialization=true

# SPRING BOOT WILL READ data.sql FROM resources DIRECTORY
# THIS data.sql SHOULD NOT BE EMPTY OTHERWISE SPRING WILL THROW ERROR

